name: Notes Application CI Pipeline
# create a CI pipeline based on the assignment specification
# remember to commit often
on:
  push:
  pull_request:

#
#
#
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm --prefix src clean-install
      - name: Run linter
        run: npm run test-lint --prefix src
      - if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-${{ github.sha }}
          path: ./src/reports/report.xml
          
  unit-tests:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm --prefix src clean-install
      - name: Run unit tests
        run: npm run test-unit --prefix src
      - if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-${{ github.sha }}
          path: ./src/reports/report.xml

  Integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm --prefix src clean-install
      - name: Run integration tests
        run: npm run test-integration --prefix src

  EndToEnd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Run your tests
        run: npx playwright test
